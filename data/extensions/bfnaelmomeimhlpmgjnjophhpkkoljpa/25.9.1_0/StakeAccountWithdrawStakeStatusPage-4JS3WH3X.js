import{a as F}from"./chunk-RLS5DN7P.js";import{a as f}from"./chunk-NIC7HW4H.js";import{a as z,b as v,c as B}from"./chunk-RE5M6MUQ.js";import"./chunk-TJVVH2WB.js";import"./chunk-6ZOJTCTS.js";import"./chunk-SHAEZV7V.js";import{e as H,j as _}from"./chunk-TH54P6T4.js";import"./chunk-6WTXMLHF.js";import"./chunk-DZ2NE3XW.js";import"./chunk-NGO5FOJW.js";import"./chunk-2LU4YM7A.js";import"./chunk-E6VR42GU.js";import"./chunk-W27Z2YZM.js";import{b as m}from"./chunk-2XU6ODO7.js";import"./chunk-7ZVEM3WY.js";import"./chunk-5LRZ7IFN.js";import{db as h}from"./chunk-ATEHMOFB.js";import"./chunk-2P7VAWV5.js";import{t as O}from"./chunk-BBWCN5OU.js";import"./chunk-T2ZXNVG7.js";import"./chunk-QYQ24YHA.js";import"./chunk-B73KBMEE.js";import"./chunk-BTKBODVJ.js";import{Da as x,Ea as N,g as I,h as P}from"./chunk-PQZYPWXP.js";import"./chunk-WFPABEAU.js";import"./chunk-FIZDH5HD.js";import"./chunk-QDZH7H34.js";import"./chunk-LWOUUIX7.js";import"./chunk-ETHULGZP.js";import{L as w,fe as L,gb as y}from"./chunk-ERHX3GUR.js";import"./chunk-WY7QFQOG.js";import"./chunk-24ISZ5TA.js";import"./chunk-2J2WSGCG.js";import"./chunk-DHK5JDA3.js";import{m as b}from"./chunk-FI5JCZQR.js";import"./chunk-7XYHSLSH.js";import"./chunk-W476YZUB.js";import"./chunk-ZIPBM4OE.js";import"./chunk-HTY4DAML.js";import{a as J}from"./chunk-6MAAUKN7.js";import"./chunk-UNDMYLJW.js";import{f as G,h as D,n as E}from"./chunk-3KENBVE7.js";D();E();var t=G(J());var X=r=>{let s={stakePubkey:r.stakeAccountPubkey,amount:r.amount,usdPerSol:r.usdPerSol,onClose:r.onClose},{t:e}=b(),{withdrawStake:c,needsLedgerApproval:d,txHash:n,confirmationStatus:i,isError:u,error:l,onDeny:a}=Y(s);if(d)return t.default.createElement(v,{ledgerAction:c,cancel:a});if(u){let o=l,k=o?.message,S=z(o),A=o?.message.includes(P),C=o?.message.includes(I);return S?t.default.createElement(B,{ledgerActionError:o,onRetryClick:c,onCancelClick:a}):A||C?t.default.createElement(F,{onCancelClick:a}):t.default.createElement(m,{icon:"error",title:e("stakeAccountWithdrawStakeWithdrawalFailed"),onClose:a,showButton:!!n},t.default.createElement(h,{wordBreak:"break-word",color:"#777777",size:16,lineHeight:20.8},k??e("stakeAccountWithdrawStakeWithdrawalFailedDescription")),t.default.createElement(f,{txHash:n},e("stakeAccountWithdrawStakeViewTransaction")))}return i==="confirmed"||i==="finalized"?t.default.createElement(m,{icon:"success",title:e("stakeAccountWithdrawStakeSolWithdrawn"),onClose:r.onClose,iconSize:"large"},t.default.createElement(h,{wordBreak:"break-word",color:"#777777",size:16,lineHeight:20.8},e("stakeAccountWithdrawStakeSolWithdrawnDescription.part1"),t.default.createElement("br",null)," ",e("stakeAccountWithdrawStakeSolWithdrawnDescription.part2")),t.default.createElement(f,{txHash:n},e("stakeAccountWithdrawStakeViewTransaction"))):t.default.createElement(m,{icon:"loading",title:e("stakeAccountWithdrawStakeWithdrawingSol"),onClose:r.onClose,iconSize:"large"},t.default.createElement(h,{wordBreak:"break-word",color:"#777777",size:16,lineHeight:20.8},e("stakeAccountWithdrawStakeWithdrawingSolDescription")),t.default.createElement(f,{txHash:n},e("stakeAccountWithdrawStakeViewTransaction")))},ht=X,Y=({onClose:r,...s})=>{let{data:e,isSuccess:c}=L(),{accountIdentifier:d,isLedgerAccount:n,solanaChainAddress:i,solanaPublicKey:u,connection:l,networkID:a}=(0,t.useMemo)(()=>{let V=e?.identifier??"",p=(e?.addresses??[]).find(q=>y.isSolanaNetworkID(q.networkID)),Q=new w.PublicKey(p?.address??""),U=e?.type==="ledger",T=p?.networkID,j=x(N(T));return{accountIdentifier:V,isLedgerAccount:U,solanaChainAddress:p,solanaPublicKey:Q,connection:j,networkID:T}},[e]),o=_(l),k=(0,t.useCallback)(()=>{o.mutate({...s,accountIdentifier:d,senderAddress:i,stakePubkey:new w.PublicKey(s.stakePubkey),authorizedPubkey:u})},[d,s,i,u,o]),S=O(),A=(0,t.useCallback)(()=>{S.denied({chainType:"solana",chainName:"solana",networkId:y.getSolanaNetworkIDValue(a),type:"withdraw"}),r()},[a,r,S]);(0,t.useEffect)(()=>{if(c){if(!e||!i)throw new Error("Selected account undefined when trying to perform stake transaction.");n||k()}},[c]);let W=o.data?.id,g=H(l,2e3,W),K=n&&(o.isIdle||o.isPending),M=g.data?.value?.confirmationStatus;return{withdrawStake:k,onDeny:A,needsLedgerApproval:K,txHash:W,confirmationStatus:M,isError:o.isError||g.isError,error:o.error||g.error}};export{X as StakeAccountWithdrawStakeStatusPage,ht as default};
//# sourceMappingURL=StakeAccountWithdrawStakeStatusPage-4JS3WH3X.js.map
